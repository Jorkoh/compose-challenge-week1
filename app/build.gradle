plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

apply from: "$rootDir/versions.gradle"

android {
    compileSdkVersion 30

    defaultConfig {
        applicationId "com.example.androiddevchallenge"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "CAT_API_TOKEN", "\"" + getPropertyOrDefault("CAT_API_TOKEN", "") + "\""
    }

    signingConfigs {
        // We use a bundled debug keystore, to allow debug builds from CI to be upgradable
        debug {
            storeFile rootProject.file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    kotlinOptions {
        jvmTarget = "1.8"

        freeCompilerArgs += "-Xopt-in=androidx.compose.material.ExperimentalMaterialApi"
    }

    buildFeatures {
        compose true

        // Disable unused AGP features
//        buildConfig false
        aidl false
        renderScript false
        resValues false
        shaders false
    }

    composeOptions {
        kotlinCompilerExtensionVersion versions.compose
    }

    packagingOptions {
        // Multiple dependency bring these files in. Exclude them to enable
        // our test APK to build (has no effect on our AARs)
        excludes += "/META-INF/AL2.0"
        excludes += "/META-INF/LGPL2.1"
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation "androidx.activity:activity-compose:1.3.0-alpha03"

    implementation "androidx.compose.ui:ui:$versions.compose"
    implementation "androidx.compose.material:material:$versions.compose"
    implementation "androidx.compose.material:material-icons-extended:$versions.compose"
    implementation "androidx.compose.ui:ui-tooling:$versions.compose"
    implementation "androidx.navigation:navigation-compose:$versions.compose_navigation"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.0'

    implementation "dev.chrisbanes.accompanist:accompanist-insets:$versions.accompanist"
    implementation "dev.chrisbanes.accompanist:accompanist-coil:$versions.accompanist"

    implementation "com.squareup.okhttp3:okhttp:4.9.0"
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit"
    implementation "com.squareup.retrofit2:converter-moshi:$versions.retrofit"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$versions.kotlinx_serialization"
    implementation "com.github.skydoves:sandwich:1.0.9"
    implementation "com.squareup.moshi:moshi-kotlin:$versions.moshi"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$versions.moshi"

    implementation "com.jakewharton.timber:timber:$versions.timber"

    implementation "com.google.dagger:hilt-android:$versions.hilt"
    implementation "androidx.hilt:hilt-navigation-fragment:$versions.hilt_navigation"
    kapt "com.google.dagger:hilt-compiler:$versions.hilt"

    kapt "androidx.room:room-compiler:$versions.room"
    implementation "androidx.room:room-runtime:$versions.room"
    implementation "androidx.room:room-ktx:$versions.room"

    testImplementation 'junit:junit:4.13.2'

    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$versions.compose"
}

Object getPropertyOrDefault(String propertyName, Object defaultValue) {
    def propertyValue = project.properties[propertyName]
    return propertyValue != null ? propertyValue : defaultValue
}